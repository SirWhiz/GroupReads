{"remainingRequest":"C:\\xampp\\htdocs\\GroupReads\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\xampp\\htdocs\\GroupReads\\node_modules\\base64-arraybuffer\\lib\\base64-arraybuffer.js","dependencies":[{"path":"C:\\xampp\\htdocs\\GroupReads\\node_modules\\base64-arraybuffer\\lib\\base64-arraybuffer.js","mtime":1524743202512},{"path":"C:\\xampp\\htdocs\\GroupReads\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1524743208736},{"path":"C:\\xampp\\htdocs\\GroupReads\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1524743165754}],"contextDependencies":[],"result":["/*\r\n * base64-arraybuffer\r\n * https://github.com/niklasvh/base64-arraybuffer\r\n *\r\n * Copyright (c) 2012 Niklas von Hertzen\r\n * Licensed under the MIT license.\r\n */\r\n(function(){\r\n  \"use strict\";\r\n\r\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n\r\n  // Use a lookup table to find the index.\r\n  var lookup = new Uint8Array(256);\r\n  for (var i = 0; i < chars.length; i++) {\r\n    lookup[chars.charCodeAt(i)] = i;\r\n  }\r\n\r\n  exports.encode = function(arraybuffer) {\r\n    var bytes = new Uint8Array(arraybuffer),\r\n    i, len = bytes.length, base64 = \"\";\r\n\r\n    for (i = 0; i < len; i+=3) {\r\n      base64 += chars[bytes[i] >> 2];\r\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\r\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\r\n      base64 += chars[bytes[i + 2] & 63];\r\n    }\r\n\r\n    if ((len % 3) === 2) {\r\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\r\n    } else if (len % 3 === 1) {\r\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\r\n    }\r\n\r\n    return base64;\r\n  };\r\n\r\n  exports.decode =  function(base64) {\r\n    var bufferLength = base64.length * 0.75,\r\n    len = base64.length, i, p = 0,\r\n    encoded1, encoded2, encoded3, encoded4;\r\n\r\n    if (base64[base64.length - 1] === \"=\") {\r\n      bufferLength--;\r\n      if (base64[base64.length - 2] === \"=\") {\r\n        bufferLength--;\r\n      }\r\n    }\r\n\r\n    var arraybuffer = new ArrayBuffer(bufferLength),\r\n    bytes = new Uint8Array(arraybuffer);\r\n\r\n    for (i = 0; i < len; i+=4) {\r\n      encoded1 = lookup[base64.charCodeAt(i)];\r\n      encoded2 = lookup[base64.charCodeAt(i+1)];\r\n      encoded3 = lookup[base64.charCodeAt(i+2)];\r\n      encoded4 = lookup[base64.charCodeAt(i+3)];\r\n\r\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\r\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\r\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\r\n    }\r\n\r\n    return arraybuffer;\r\n  };\r\n})();\r\n",null]}