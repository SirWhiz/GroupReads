{"remainingRequest":"C:\\xampp\\htdocs\\GroupReads\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\xampp\\htdocs\\GroupReads\\node_modules\\rxjs\\_esm5\\util\\ArgumentOutOfRangeError.js","dependencies":[{"path":"C:\\xampp\\htdocs\\GroupReads\\node_modules\\rxjs\\_esm5\\util\\ArgumentOutOfRangeError.js","mtime":1524743248607},{"path":"C:\\xampp\\htdocs\\GroupReads\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1524743208736},{"path":"C:\\xampp\\htdocs\\GroupReads\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1524743165754}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\r\n/**\r\n * An error thrown when an element was queried at a certain index of an\r\n * Observable, but no such index or position exists in that sequence.\r\n *\r\n * @see {@link elementAt}\r\n * @see {@link take}\r\n * @see {@link takeLast}\r\n *\r\n * @class ArgumentOutOfRangeError\r\n */\r\nexport var ArgumentOutOfRangeError = /*@__PURE__*/ (function (_super) {\r\n    __extends(ArgumentOutOfRangeError, _super);\r\n    function ArgumentOutOfRangeError() {\r\n        var err = _super.call(this, 'argument out of range');\r\n        this.name = err.name = 'ArgumentOutOfRangeError';\r\n        this.stack = err.stack;\r\n        this.message = err.message;\r\n    }\r\n    return ArgumentOutOfRangeError;\r\n}(Error));\r\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map\r\n",null]}